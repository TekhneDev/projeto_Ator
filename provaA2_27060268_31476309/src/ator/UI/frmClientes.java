/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ator.UI;

import ator.DAL.AtorDAL;
import ator.DTO.AtorDTO;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carla && taui
 */
public class frmClientes extends javax.swing.JFrame {

    /**
     * Creates new form frmClientes
     */
    public frmClientes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNomeCliAtor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        IdadeCliAtor = new javax.swing.JTextField();
        btnIncluirCliAtor = new javax.swing.JButton();
        btnAlterarCliAtor = new javax.swing.JButton();
        btnExcluirCliAtor = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCodigoIDCliAtor = new javax.swing.JTextField();
        btnPesquisarCliAtorID = new javax.swing.JButton();
        btnMostrarCliAtor = new javax.swing.JButton();
        btnLimparCliAtor = new javax.swing.JButton();
        btnSairCliAtor = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dgvClientesAtor = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Cadastro de Atores");
        setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        setResizable(false);

        jLabel1.setText("Nome do Ator");

        txtNomeCliAtor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeCliAtorActionPerformed(evt);
            }
        });

        jLabel2.setText("Idade");

        IdadeCliAtor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdadeCliAtorActionPerformed(evt);
            }
        });

        btnIncluirCliAtor.setMnemonic('I');
        btnIncluirCliAtor.setText("Incluir");
        btnIncluirCliAtor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirCliAtorActionPerformed(evt);
            }
        });

        btnAlterarCliAtor.setMnemonic('A');
        btnAlterarCliAtor.setText("Alterar");
        btnAlterarCliAtor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarCliAtorActionPerformed(evt);
            }
        });

        btnExcluirCliAtor.setMnemonic('E');
        btnExcluirCliAtor.setText("Excluir");
        btnExcluirCliAtor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirCliAtorActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 51, 51));
        jLabel3.setText("Cadastro Atores");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(198, 198, 198)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
        );

        jLabel4.setText("Código(ID)");

        btnPesquisarCliAtorID.setMnemonic('P');
        btnPesquisarCliAtorID.setText("Pesquisar");
        btnPesquisarCliAtorID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarCliAtorIDActionPerformed(evt);
            }
        });

        btnMostrarCliAtor.setMnemonic('M');
        btnMostrarCliAtor.setText("Mostrar Todos");
        btnMostrarCliAtor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarCliAtorActionPerformed(evt);
            }
        });

        btnLimparCliAtor.setMnemonic('L');
        btnLimparCliAtor.setText("Limpar");
        btnLimparCliAtor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCliAtorActionPerformed(evt);
            }
        });

        btnSairCliAtor.setMnemonic('S');
        btnSairCliAtor.setText("Sair");
        btnSairCliAtor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairCliAtorActionPerformed(evt);
            }
        });

        dgvClientesAtor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Código (ID)", "Nome Ator", "Idade"
            }
        ));
        jScrollPane1.setViewportView(dgvClientesAtor);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(txtNomeCliAtor)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(IdadeCliAtor, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtCodigoIDCliAtor, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPesquisarCliAtorID))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnIncluirCliAtor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAlterarCliAtor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnExcluirCliAtor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnMostrarCliAtor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnLimparCliAtor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSairCliAtor)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodigoIDCliAtor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarCliAtorID))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNomeCliAtor, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(IdadeCliAtor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIncluirCliAtor)
                    .addComponent(btnAlterarCliAtor)
                    .addComponent(btnExcluirCliAtor)
                    .addComponent(btnMostrarCliAtor)
                    .addComponent(btnLimparCliAtor)
                    .addComponent(btnSairCliAtor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeCliAtorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeCliAtorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeCliAtorActionPerformed

    private void btnAlterarCliAtorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarCliAtorActionPerformed
        // fazendo a validação dos dados, o método isEmpty que devolve true se a String for vazia ou false se a mesma nã estiver vazia
        if ((txtNomeCliAtor.getText().isEmpty()) || (IdadeCliAtor.getText().isEmpty()))
        {
            JOptionPane.showMessageDialog(null, "Verifique Se Tem Algum Campo Vazio !!!!");
            //O cursor do mouse vai se posicionado no campo Código do Cliente
            txtCodigoIDCliAtor.requestFocus();
        }
        else 
        {
            // instanciando a classe ClientesDTO do pacote DTO e criando seu objeto cliente
            AtorDTO ator = new AtorDTO();
            // Instancia a classe ClienteDAL 
            AtorDAL dal = new AtorDAL();
            
            ator.setAtorID(Long.parseLong(txtCodigoIDCliAtor.getText()));
            ator.setAtorNome(txtNomeCliAtor.getText());
            ator.setAtorIdade((int) Long.parseLong(IdadeCliAtor.getText()));
          
            
            // Apaguei algo
            try
            {
                // Chama o método 
                dal.alterarAtor(ator);
            }
            catch (Exception ex)
            {
                Logger.getLogger(frmClientes.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Cliente " + ator.getAtorNome() + " Alterado Com Sucesso !!!!");
        }

    }//GEN-LAST:event_btnAlterarCliAtorActionPerformed

    private void btnExcluirCliAtorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirCliAtorActionPerformed
        //Verifica se os campos estão preenchidos    
        if (((txtCodigoIDCliAtor.getText().isEmpty()) || (txtNomeCliAtor.getText().isEmpty()) || (IdadeCliAtor.getText().isEmpty()))) {
            JOptionPane.showMessageDialog(null, "Verifique Se Tem Algum Campo Vazio !!!!");
            txtCodigoIDCliAtor.requestFocus();
        }
        else
        {
            // instanciando a classe clientesDTO do pacote DTO e criando seu objeto cliente        
            AtorDTO ator = new AtorDTO();
            ator.setAtorID(Long.parseLong(txtCodigoIDCliAtor.getText()));
            Object[] opcoes = {"Sim", "Não"};
            int contador = JOptionPane.showOptionDialog(null, "Deseja Excluir Este Ator: " + txtNomeCliAtor.getText() + "?",
                    "Exclusão", JOptionPane.YES_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcoes, opcoes[0]);
            if (contador == JOptionPane.YES_OPTION) {
                try
                {
                    AtorDAL dal = new AtorDAL();
                    dal.excluirAtor(Integer.valueOf(txtCodigoIDCliAtor.getText()));
                    JOptionPane.showMessageDialog(null, "Ator Excluído com Sucesso !!!!");
                    // apaga os dados preenchidos nos campos de texto abaixo
                    txtCodigoIDCliAtor.setText(null);
                    txtNomeCliAtor.setText("");
                    IdadeCliAtor.setText(null);
                    txtCodigoIDCliAtor.requestFocus();
                }
                catch (Exception ex)
                {
                    Logger.getLogger(frmClientes.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnExcluirCliAtorActionPerformed

    private void IdadeCliAtorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdadeCliAtorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IdadeCliAtorActionPerformed

    private void btnIncluirCliAtorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirCliAtorActionPerformed
        //Abrindo a conexão com o Banco de Dados
        AtorDAL dal = new AtorDAL();
        try
        {
            dal.abrirBD();
        }
        catch (Exception ex)
        {
            Logger.getLogger(frmClientes.class.getName()).log(Level.SEVERE, null, ex);
        }
        // instanciando a classe ClienteDTO do pacote DTO e criando seu objeto cliente
        AtorDTO ator = new AtorDTO();
        ator.setAtorNome(txtNomeCliAtor.getText());
        ator.setAtorIdade((int) Long.parseLong(IdadeCliAtor.getText()));
        
        // fazendo a validação dos dados
        if ((txtNomeCliAtor.getText().isEmpty()) || (IdadeCliAtor.getText().isEmpty()))
        {
            JOptionPane.showMessageDialog(null, "Os campos não podem estar vazios !!!!");
            txtNomeCliAtor.requestFocus();
        }
        else
        {
            try {
                // Instancia a classe ClienteDAL e chama o método incluirCliente
                dal.incluirAtor(ator);
                JOptionPane.showMessageDialog(null, "Usuário " + txtNomeCliAtor.getText() + " incluído com sucesso! ");
                dal.fecharBD();
                txtNomeCliAtor.requestFocus();
                btnMostrarCliAtor.setEnabled(true);
            } catch (Exception ex)
            {
                Logger.getLogger(frmClientes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        // apaga os dados preenchidos nos campos de texto
        txtNomeCliAtor.setText("");
        IdadeCliAtor.setText(null);

    }//GEN-LAST:event_btnIncluirCliAtorActionPerformed

    private void btnMostrarCliAtorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarCliAtorActionPerformed
        //Limpa todas as caixas de texto
        txtCodigoIDCliAtor.setText("");
        txtNomeCliAtor.setText("");
        IdadeCliAtor.setText(null);
        // instanciando a classe AtorDAL
        AtorDAL ator = new AtorDAL();
        //Cria a lista de todos os clientes dentro da tabela Clientes
        List<AtorDTO> selecionaTodosAtor = new ArrayList<>();
        try
        {
            //Chama o método selecionaTodosClientes da Classe ClientesDAL e preeche
            //o mesmo com a lista de todos os clientes.
            selecionaTodosAtor = ator.listAtor();
        }
        catch (Exception ex)
        {
            Logger.getLogger(frmClientes.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Prepara a tabela para receber os dados da busca(Lista)
        DefaultTableModel tabm = (DefaultTableModel)dgvClientesAtor.getModel();
        for(int contador = tabm.getRowCount()-1; contador >=0; contador--)
        {
            tabm.removeRow(contador);
        }
        int contador = 0;
        for(AtorDTO atores : selecionaTodosAtor)
        {
            //Mostra as informações dentro da Tabela
            tabm.addRow(new String[1]);
            dgvClientesAtor.setValueAt(atores.getAtorID(), contador, 0);
            dgvClientesAtor.setValueAt(atores.getAtorNome(),contador, 1);
            dgvClientesAtor.setValueAt(atores.getAtorIdade(), contador, 2);     
            contador++;
        }
        //Limpa o campo Código do Cliente
        txtCodigoIDCliAtor.setText(null);
        //Posiciona o cursor do mouse no campo Nome do cliente
        txtNomeCliAtor.requestFocus();

    }//GEN-LAST:event_btnMostrarCliAtorActionPerformed

    private void btnSairCliAtorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairCliAtorActionPerformed
        // Fecha o formulário de clientes e volta para o formulário principal
        dispose();
    }//GEN-LAST:event_btnSairCliAtorActionPerformed

    private void btnPesquisarCliAtorIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarCliAtorIDActionPerformed
        //Verifica se o código do cliente está vazio
        if ("".equals(txtCodigoIDCliAtor.getText()))
        {
            JOptionPane.showMessageDialog(null, "Código do Cliente não pode ser vazio, favor digite um código válido !!!!");
            //Após a mensagem de erro, o foco do cursor vai ficar no campo Código do Cliente
            txtCodigoIDCliAtor.requestFocus();
        }
        else
        {
            //Faz o tratamento de erro, para verificar se a tabela Clientes está vazia
            try
            {
                // instanciando a classe ClienteDTO do pacote DTO e criando seu objeto cliente
                AtorDTO ator = new AtorDTO();
                // Instancia a classe ClientesDAL
                AtorDAL dal = new AtorDAL();
                
                ator = dal.selecionarAtorPorID(Integer.valueOf(txtCodigoIDCliAtor.getText()));
                //O botão Incluir vai ficar dsesabilitado
                btnIncluirCliAtor.setEnabled(false);
                //O botão Alterar vai ficar habilitado
                btnAlterarCliAtor.setEnabled(true);
                //O botão Excluir vai ficar habilitado
                btnExcluirCliAtor.setEnabled(true);
                //O botão Mostrar Todos vai ficar habilitado
                btnMostrarCliAtor.setEnabled(true);
                //Mostra os dados do Cliente pelo seu código
                txtNomeCliAtor.setText(ator.getAtorNome());
                IdadeCliAtor.setText(Integer.toString(ator.getAtorIdade()));
               
            }
            catch(Exception ex)
            {
                JOptionPane.showMessageDialog(null, "Cliente Não Encontrado. Favor Tente Novamente !!!!");
                txtCodigoIDCliAtor.setText(null);
                txtCodigoIDCliAtor.requestFocus();
            }
        }

    }//GEN-LAST:event_btnPesquisarCliAtorIDActionPerformed

    private void btnLimparCliAtorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCliAtorActionPerformed
        //Limpa os campos do formulário e do grid ou tabela 
        btnIncluirCliAtor.setEnabled(true);
        btnAlterarCliAtor.setEnabled(false);
        btnExcluirCliAtor.setEnabled(false);
        btnMostrarCliAtor.setEnabled(true);
        txtCodigoIDCliAtor.setText("");
        txtNomeCliAtor.setText("");
        IdadeCliAtor.setText(null);
        txtNomeCliAtor.requestFocus();
        DefaultTableModel tabm = (DefaultTableModel)dgvClientesAtor.getModel();
        for (int contador = tabm.getRowCount() -1; contador >= 0; contador--)
        {
            tabm.removeRow(contador);
        }

    }//GEN-LAST:event_btnLimparCliAtorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JTextField IdadeCliAtor;
    javax.swing.JButton btnAlterarCliAtor;
    javax.swing.JButton btnExcluirCliAtor;
    javax.swing.JButton btnIncluirCliAtor;
    javax.swing.JButton btnLimparCliAtor;
    javax.swing.JButton btnMostrarCliAtor;
    javax.swing.JButton btnPesquisarCliAtorID;
    javax.swing.JButton btnSairCliAtor;
    javax.swing.JTable dgvClientesAtor;
    javax.swing.JLabel jLabel1;
    javax.swing.JLabel jLabel2;
    javax.swing.JLabel jLabel3;
    javax.swing.JLabel jLabel4;
    javax.swing.JPanel jPanel2;
    javax.swing.JScrollPane jScrollPane1;
    javax.swing.JTextField txtCodigoIDCliAtor;
    javax.swing.JTextField txtNomeCliAtor;
    // End of variables declaration//GEN-END:variables
}
